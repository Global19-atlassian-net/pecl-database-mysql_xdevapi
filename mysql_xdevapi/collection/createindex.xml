<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="mysql-xdevapi-collection.createindex" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Collection::createIndex</refname>
  <refpurpose>Description</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>mysql_xdevapi\Collection::createIndex</methodname>
   <methodparam><type>string</type><parameter>index_name</parameter></methodparam>
   <methodparam><type>string</type><parameter>index_desc_json</parameter></methodparam>
  </methodsynopsis>
  <para>
    Creates an index on the collection with the given name and options.

    Fails with error if an index with the same name already exists or if index definition
    is not correctly formed.
</para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>index_name</parameter></term>
    <listitem>
     <para>
      The name of the index that has to be create, this name must be a valid index name as accepted by SQL
      command "CREATE INDEX ... ".
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>index_desc_json</parameter></term>
    <listitem>
     <para>
      This is the definition of the index that has to be created, it contains an array of IndexField objects,
      each describing a single document member to be included in the index (see below) and an optional string for
      the type of the index which might be one of INDEX or SPATIAL. Default is INDEX and may be omitted.

      A single IndexField description consists of the following fields:

      field: string, the full document path to the document member or field to be indexed
      type: string, one of the supported SQL column types to map the field into. 
            For numeric types, the optional UNSIGNED keyword may follow. 
            For the TEXT type, the length to consider for indexing may be added.
      required: bool, (optional) true if the field is required to exist in the document. 
            defaults to false, except for GEOJSON where it defaults to true
      options: int, (optional) special option flags for use when decoding GEOJSON data
      srid: int, (optional) srid value for use when decoding GEOJSON data

     It is an error to include other fields not described above in IndexDefinition or IndexField documents.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
  no return value 
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>mysql_xdevapi\Collection::createIndex</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
//Assuming $coll is a valid Collection object.

//creating index on single field
	$coll->createIndex("index1",{fields:[{field:"$.name", type: "TEXT(15)"}]})->execute();

//creating index with unique set to false
	$coll->createIndex("index2",{fields:[{field:"$.name", type: "TEXT(15)"}],unique : false})->execute();

//creating an index with required option set to true
$coll->createIndex("index3",{fields:[{field:"$.name", type: "TEXT(15)",required : true}]})->execute();

//creating index on multiple feilds
	$coll->createIndex("index4",{fields:[{field:"$.name", type: "TEXT(20)"},{field:"$.age",type: "INTEGER"}]})->execute();

//creating spatial index
	$coll->createIndex("index1",{fields:[{field:"$.name", type: "GEOJSON"}],type : "SPATIAL"})->execute();

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
...
]]>
   </screen>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
