<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="mysql-xdevapi-collection.remove" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Collection::remove</refname>
  <refpurpose>Removes documents from collection</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>Result</type><methodname>mysql_xdevapi\Collection::remove</methodname>
   <methodparam choice="opt"><type>string</type><parameter>search_condition</parameter></methodparam>
  </methodsynopsis>
  <para>
   Allows to remove one or more documents from the Collection, the search_condition is used as valid SQL expression
   to select the documents to erase.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>search_condition</parameter></term>
    <listitem>
     <para>
      It must be a valid SQL expression that will be used to match the documents thare are going to be erased,
      this expression might as simple as 'true' which will match all the docuemnts, or it might use functions like:
      1) 'CAST(_id AS SIGNED) >= 10'
      2) 'age MOD 2 = 0 OR age MOD 3 = 0'
</para>
  <para>
      Also the IN operator is currently supported,for example: '_id IN ["2","5","7","10"]'. For more detail
      have a look at the code sample
 
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   If the operation is not executed then the function will return a Remove object that can be used to provide
   further options to the modify operation.

   If the remove operation is executed then the returned object is going to hold the result of the operation.
 
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>mysql_xdevapi\Collection::remove</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php

//Assuming $coll is a valid Collection object

//Remove all the documents for which the 'age' field is between 20 and 50
$coll->remove('age > :age_from and age < :age_to')->bind(['age_from' => 20, 'age_to' => 50])->limit(7)->execute();

//Select for removal all the documents, sort them by age (descending) and remove only the first 2
$coll->remove('true')->sort('age desc')->limit(2)->execute();

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
...
]]>
   </screen>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
