<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="mysql-xdevapi-collection.add" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Collection::add</refname>
  <refpurpose>Description</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>Result</type><methodname>mysql_xdevapi\Collection::add</methodname>
   <methodparam><type>string</type><parameter>json</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function triggers the insertion of the given document(s) into the collection, multiple variants of the
   function are supported, the user can either: 1) Add a single document as a JSON string 2) Add a single document
   as an array in the form of [ 'field' => 'value', 'field2' => 'value2' ... ] 3) mix the (1) and (2) 4) Add multiple
   documents in the same operation.

   Attempting to add an empty doc ( [] for example ) is a no op. The user can provide a unique document ID with
   the document, if that happens then the server will not generate an identifier but the user ID will be used, is
   important to make sure that the ID is unique within the session or the 'add' operation will fail.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>json</parameter></term>
    <listitem>
     <para>
      One or multiple documents, this can either be a JSON or an array of fields with their values, see the example
      below for more details.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Once executed the add operation return a Result object that can be used to query the amount of effected items,
   the amount of warnings or to get the list of generated IDs for the inserted documents.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>mysql_xdevapi\Collection::add</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
//Assuming $connection_uri is a valid URI
$session = mysql_xdevapi\getSession($connection_uri);
$session->executeSql("create database $db");
$schema = $session->getSchema($db);
$schema->createCollection("test_collection");
$coll = $schema->getCollection("test_collection");

//Two sample add, the IDs are generated by the server:
$coll->add('{"name": "Marco",      "age": 19, "job": "Programmatore"}')->execute();
$coll->add('{"name": "Lonardo",    "age": 59, "job": "Paninaro"}')->execute();

//Two more add in the same operation, here we're providing the ID's:
$coll->add(
    ["_id" => "1", "name" => "Sakila", "age" => 18, "job" => "Student"],
    ["_id" => "2", "name" => "Mike", "age" => 39, "job" => "Manager"]
    )->execute();
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
...
]]>
   </screen>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
