<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="mysql-xdevapi-collection.addorreplaceone" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Collection::addOrReplaceOne</refname>
  <refpurpose>Add document to collection or replace if already exists</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>Result</type><methodname>mysql_xdevapi\Collection::addOrReplaceOne</methodname>
   <methodparam><type>string</type><parameter>id</parameter></methodparam>
   <methodparam><type>string</type><parameter>doc</parameter></methodparam>
  </methodsynopsis>
  <para>
   This is one of a set of operations that are not going to operate on a single document but on all the documents
   that are matching a specific filter. addOrReplaceOne in particular will add or if the document already exists, will repace,
   the entry in the collection which match the ID provided.
   To understand this function is worth to list all the possible scenarios that the user can encounter:
   1) If neither the id nor any unique key values conflict with any document in the collection, the document must be added to it.
   2) If the id does not match any document but one or more unique key values conflict with a document in the collection, then an error is raised
   3) If id matches an existing document AND no unique keys are defined for the collection, the document is replaced.
   4) If id matches an existing document AND (all unique keys in the replacement document match that same document OR don't conflict with any other documents in the collection), the document is replaced
   5) If id matches an existing document AND one or more unique keys match a different document from the collection, then an error is raised
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>id</parameter></term>
    <listitem>
     <para>
      This is the filter ID, If this ID or any other field that has a unique index on it already exists in the collection, it will update the matching document instead.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>doc</parameter></term>
    <listitem>
     <para>
      This is the document that is going to be added or replaced by the function, which is a JSON string.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The function returns a 'Result' object.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>mysql_xdevapi\Collection::addOrReplaceOne</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php

/*
    Assuming that $coll is a valid collection object, the following call to addOrReplaceOne
    will search for a document with the ID 121 and will either replace it or add a new one with
    that ID.
*/
$res = $coll->addOrReplaceOne('121', '{"name": "Sakila", "age": 30, "job": "Radio", "_id": "121" }');

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
...
]]>
   </screen>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
