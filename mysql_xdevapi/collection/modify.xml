<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="mysql-xdevapi-collection.modify" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Collection::modify</refname>
  <refpurpose>Modifies documents in collection</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>Result</type><methodname>mysql_xdevapi\Collection::modify</methodname>
   <methodparam choice="opt"><type>string</type><parameter>search_condition</parameter></methodparam>
  </methodsynopsis>
  <para>
   It allows to manipulate the content of the collection selecting documents that are going to be modified.
   The documents that are going to be changed are selected via the search_condition mandatory parameter, there
   are multiple allowed operation and all the detail are provided in the relevant documentation subcategory.

   the modify operation supports parameter binding.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>search_condition</parameter></term>
    <listitem>
     <para>
      It must be a valid SQL expression that will be used to match the documents thare are going to be modified,
      this expression might as simple as 'true' which will match all the docuemnts, or it might use functions like:
      1) 'CAST(_id AS SIGNED) >= 10'
      2) 'age MOD 2 = 0 OR age MOD 3 = 0'
</para>
  <para>

      Also the IN operator is currently supported,for example: '_id IN ["2","5","7","10"]'. For more detail
      have a look at the code sample
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   If the operation is not executed then the function will return a Modify object that can be used to provide
   further options to the modify operation.
</para>
  <para>
   If the modify operation is executed then the returned object is going to hold the result of the operation.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>mysql_xdevapi\Collection::modify</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php

//Assuming that $coll is a valid Collection object

//To all the documents with the 'job' field like 'Programmatore' or 'Cantante' append two new jobs: Volontario and Tassinaro
$coll->modify("job in ('Programmatore', 'Cantante')")->arrayAppend('job', 'Volontario')->arrayAppend('job', 'Tassinaro')->execute();

//Remove the 'age' field from all the docs with 'ordinal' between 1 and 9
$coll->modify('ordinal >= 1 and ordinal <= 9')->unset(['age'])->execute();

/*
 The modify operation is split in two lines, the object returned by a not executed 'modify'
 holds the state of the current modify (it might be executed later)
*/
$obj = $coll->modify('age > :age1 and age < :age2')->bind(['age1' => 25, 'age2' => 40]);
$data = $obj->sort(['_id desc'])->limit(2)->replace('job', 'Disoccupato')->execute();

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
...
]]>
   </screen>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
