<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="mysql-xdevapi-collectionmodify.arrayinsert" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CollectionModify::arrayInsert</refname>
  <refpurpose>Insert element into an array field</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mysql_xdevapi\CollectionModify</type><methodname>mysql_xdevapi\CollectionModify::arrayInsert</methodname>
   <methodparam><type>string</type><parameter>collection_field</parameter></methodparam>
   <methodparam><type>string</type><parameter>expression_or_literal</parameter></methodparam>
  </methodsynopsis>
  <para>
   In a similar way to arrayAppend this function allows to add a new element to a field of a document, the 
   main difference between the two functions is tha arrayInsert permit the user to specify after which
   item of the array the new element has to be inserted, whereas arryAppend appends always the element at
   the end of the array.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>collection_field</parameter></term>
    <listitem>
     <para>
      Identify the item in the array after which the new element has to be inserted.
      The format of this parameter is: FIELD_NAME[ INDEX ] where FIELD_NAME is the name of the document
      field and INDEX is the INDEX of the element within the field.
     </para>
     <para>
      The INDEX field is zero based, so the leftmost item from the array has an index of 0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>expression_or_literal</parameter></term>
    <listitem>
     <para>
      The new element that will be inserted after FIELD_NAME[ INDEX ]
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a CollectionModify object that can be used to execute the command or to add further operations
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>mysql_xdevapi\CollectionModify::arrayInsert</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php

//Assuming that $coll is a valid Collection object

//Add a new job 'Calciatore' after the second element in jobs
$coll->modify("name like 'Paolo'")->arrayInsert('job[1]', 'Calciatore')->execute();


?>
]]>
   </programlisting>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
