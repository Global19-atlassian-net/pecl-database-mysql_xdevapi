<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 345450 $ -->

<chapter xml:id="mysql-xdevapi.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.setup;

 <section xml:id="mysql-xdevapi.requirements">
  &reftitle.required;
  <para>
   This extension requires a MySQL 8+ server with the X plugin
   enabled (default).
  </para>
  <para>
   Prerequisite libraries for compiling this extension are:
   Boost, OpenSSL, and Protobuf.
  </para>

 </section>

 <section xml:id="mysql-xdevapi.build">
  &reftitle.required;
  <para>
	0) configure/build
	The extension name is "mysql-xdevapi", you enable it with
	"--enable-mysql-xdevapi", for the moment only phpize/pecl build mode
	is officially supported.

	Required 3rdParty libs (boost, protobuf) may be configured with following options:
	--with-boost[=DIR]
	--with-protobuf[=DIR]

	They may be pointed out with below environment variables too:
	- MYSQL_XDEVAPI_PROTOBUF_ROOT to point out google protobuf root
	- MYSQL_XDEVAPI_BOOST_ROOT to point out boost libraries

	And on Windows also with configure options: --with-extra-includes --with-extra-libs
  </para>

  <para>
	1) Build on Windows
	It is recommended to prepare environment and build mysql_xdevapi extension according to:
	https://wiki.php.net/internals/windows/stepbystepbuild (older SDK, PHP-7.1 only)
	https://wiki.php.net/internals/windows/stepbystepbuild_sdk_2 (PHP-7.1 or newer)

	It is also strongly recommended to use backslash '\\' instead of slash '/' for all paths.
  </para>

  <para>
	2) Boost
	Only headers are needed, no boost binaries required.
  </para>

  <para>
	3) Google Protocol Buffers on Windows
	On Windows depending on used run-times the static library with Multi-Threaded DLL
	runtime may be needed. To prepare such library on your own following options should
	be applied:
	-Dprotobuf_MSVC_STATIC_RUNTIME=OFF -Dprotobuf_BUILD_SHARED_LIBS=OFF
  </para>

  <para>
	4) Google Protocol Buffers / protocol compiler (protoc)
	In configuration of build there is no extra option to set additional dir with binaries,
	so ensure that proper 'protoc' is available on PATH while building. It is especially
	important in case of usage PHP SDK on Windows - its batch scripts may overwrite
	environment.
  </para>

  <para>
	5) Bison
	Ensure that proper version of Bison is on path while building.

	If you build on Windows (especially with older SDK - see point 1.) it is strongly
	recommended to use the one delivered with chosen PHP SDK, else (in case of improper
	bison.exe version) following error may be met:

	c:\php-sdk\phpdev\vc14\x86\connector-php-7.1.0\zend\zend_globals_macros.h(39):
		error C2375: 'zendparse': redefinition; different linkage
	Zend/zend_language_parser.h(214): note: see declaration of 'zendparse'

	Besides, batch scripts from PHP SDK on Windows may overwrite environment.
  </para>

 </section>

 <section xml:id="mysql-xdevapi.installation">
  &reftitle.install;

  <para>
   &pecl.moved;
  </para>

  <para>
   An example installation procedure on Ubuntu 18.04 with PHP 7.2:
  </para>
<programlisting>
<![CDATA[
// Dependencies
$ apt install build-essential libprotobuf-dev libboost-dev openssl protobuf-compiler

// PHP with the desired extensions; php7.2-dev is required to compile
$ apt install php7.2-cli php7.2-dev php7.2-mysql php7.2-pdo php7.2-xml

// Compile the extension
$ pecl install mysql_xdevapi
]]>
</programlisting>

  <para>
    The <literal>pecl install</literal> command does not enable PHP extensions (by default)
    and enabling PHP extensions can be done in several ways.
    Another PHP 7.2 on Ubuntu 18.04 example:
  </para>

<programlisting>
<![CDATA[
// Create its own ini file
$ echo "extension=mysql_xdevapi.so" > /etc/php/7.2/mods-available/mysql_xdevapi.ini

// Use the 'phpenmod' command (note: it's Debian/Ubuntu specific)
$ phpenmod -v 7.2 -s ALL mysql_xdevapi

// A 'phpenmod' alternative is to manually symlink it
// $ ln -s /etc/php/7.2/mods-available/mysql_xdevapi.ini /etc/php/7.2/cli/conf.d/20-mysql_xdevapi.ini

// Let's see which MySQL extensions are enabled now
$ php -m |grep mysql

mysql_xdevapi
mysqli
mysqlnd
pdo_mysql
]]>
</programlisting>

  <para>
   &pecl.info;
   <link xlink:href="&url.pecl.package;apc">&url.pecl.package;mysql_xdevapi</link>.
  </para>

 </section>

 <!-- {{{ Configuration -->
 &reference.mysql-xdevapi.ini;
 <!-- }}} -->

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
